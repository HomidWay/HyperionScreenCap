// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace hyperionnet
{

public enum Command : byte
{
  NONE = 0,
  Color = 1,
  Image = 2,
  Clear = 3,
  Register = 4,
};

public class CommandUnion {
  public Command Type { get; set; }
  public object Value { get; set; }

  public CommandUnion() {
    this.Type = Command.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public hyperionnet.ColorT AsColor() { return this.As<hyperionnet.ColorT>(); }
  public hyperionnet.ImageT AsImage() { return this.As<hyperionnet.ImageT>(); }
  public hyperionnet.ClearT AsClear() { return this.As<hyperionnet.ClearT>(); }
  public hyperionnet.RegisterT AsRegister() { return this.As<hyperionnet.RegisterT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, CommandUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Command.Color: return hyperionnet.Color.Pack(builder, _o.AsColor()).Value;
      case Command.Image: return hyperionnet.Image.Pack(builder, _o.AsImage()).Value;
      case Command.Clear: return hyperionnet.Clear.Pack(builder, _o.AsClear()).Value;
      case Command.Register: return hyperionnet.Register.Pack(builder, _o.AsRegister()).Value;
    }
  }
}


}
